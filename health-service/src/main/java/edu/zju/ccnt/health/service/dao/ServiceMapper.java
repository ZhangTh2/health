package edu.zju.ccnt.health.service.dao;

import edu.zju.ccnt.health.service.dto.BaseInfoDTO;
import edu.zju.ccnt.health.service.model.Service;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ServiceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    int insert(Service record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    int insertSelective(Service record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    Service selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Service record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table service
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Service record);

    List<Service> selectByEnterpriseId(Integer userId);     //查找已经审核过的且还在架上的服务

    int selectByServiceName(String serviceName);

    //这里对查询服务列表做缓存，在对服务进行删除、修改、添加时缓存无效，需重新查询
    List<Service> selectServiceList(@Param("serviceName") String serviceName, @Param("orderBy") String orderBy, @Param("categoryId") Integer categoryId);

    int selectByServiceNameAndServiceId(@Param("serviceName") String serviceName, @Param("serviceId") Integer serviceId);

    List<Service> selectByServiceNameAndUserList(@Param("serviceName") String serviceName, @Param("userList") List<Integer> userList, @Param("checked") Integer checked);

    List<Service> selectBySuperAdmin(@Param("serviceName") String serviceName, @Param("checked") Integer checked, @Param("userList") List<Integer> userList);

    //按服务id列表查询所有服务信息
    List<Service> selectByServiceIdList(@Param("serviceIdList") List<Integer> serviceIdList);

    List<Service> selectThirdByServiceName(@Param("serviceName") String serviceName, @Param("isOther") Integer isOther);

    List<Integer> selectServiceByUserLists(@Param("userList") List<Integer> userList /*, @Param("checked") Integer checked*/);

    int selectAllChecked();

    List<Integer> selectServiceByName(String name);

    //根据搜索条件来搜索服务名单，分页返回
    List<BaseInfoDTO> searchByCondition(@Param("type") Integer type, @Param("categoryids") List<Integer> categoryidlist, @Param("serviceName") String serviceName, @Param("checked") Integer checked, @Param("sort") String sort, @Param("page") Integer page, @Param("limit") Integer limit);

    //根据搜索条件来搜索服务的数量
    Integer searchtotalByCondition(@Param("type") Integer type, @Param("categoryids") List<Integer> categoryidlist, @Param("serviceName") String serviceName, @Param("checked") Integer checked);

    //上传图片后更改服务图片的img
    Integer updateImg(@Param("service_id") Integer service_id, @Param("service_img") String service_img);

    //更改服务的checked信息
    Integer updateChecked(@Param("service_id") Integer service_id, @Param("checked") Integer checked);

    //审核不通过的服务提供备注
    Integer uncheck(@Param("service_id") Integer service_id, @Param("checked") Integer checked, @Param("remarks") String remarks);

    //根据类型查询未审核的服务
    Integer getUnckeckNum(@Param("type") Integer type);
}