package edu.zju.ccnt.health.admin.dao;

import edu.zju.ccnt.health.admin.model.Admin;
import edu.zju.ccnt.health.admin.vo.DetailInfoVo;
import edu.zju.ccnt.health.admin.vo.SearchInfoVo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Mapper
public interface AdminMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    int insert(Admin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    int insertSelective(Admin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    Admin selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Admin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table admin
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Admin record);

    Integer validateAdmin(@Param("username") String username, @Param("password") String password);

    int getRoleById(@Param("id") Integer id);

    List<Admin> getAdminByRole(@Param("role_id") Integer role_id);

    /*
        在连接数据库时配置useAffectedRows=true时update返回的值是受到影响的行数，否则是match的行数
    */

    //根据编号将管理员离职
    int deleteById(@Param("id") Integer id);

    //根据标号审核管理员
    int checkById(@Param("id") Integer id);

    //搜索名字是否存在
    Integer checkName(@Param("name") String name);

    //根据搜索条件来搜索管理员名单
    List<DetailInfoVo> searchByCondition(@Param("role_id") Integer roleId, @Param("username") String username, @Param("name") String name, @Param("checked") Integer checked, @Param("sort") String sort, @Param("page") Integer page, @Param("limit") Integer limit);

    //根据搜索条件获得总量
    Integer searchtotalByCondition(@Param("role_id") Integer roleId, @Param("username") String username, @Param("name") String name, @Param("checked") Integer checked);
//    SearchInfoVo searchByCondition(@Param("role_id") Integer roleId, @Param("username") String username, @Param("name") String name, @Param("checked") Integer checked, @Param("sort") String sort, @Param("page") Integer page, @Param("limit") Integer limit);

    //获取总量是多少
    Integer getTotal();

    //根据role获取未审核的管理员
    Integer getUnckeckedNumByRoleId(@Param("role_id") Integer roleId);

    //更新用户头像
    int updateAvataById(@Param("id") Integer id, @Param("imgUrl") String imgUrl);

}